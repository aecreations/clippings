<?xml version="1.0"?>
<?xml-stylesheet href="chrome://clippings-laf/skin/clippingsMgr.css" type="text/css"?>
<?xml-stylesheet href="chrome://clippings-laf/skin/clippingLabelPalette.css" type="text/css"?>

<!DOCTYPE window SYSTEM "chrome://clippings/locale/clippings.dtd">

<!-- ***** BEGIN LICENSE BLOCK *****
   - Version: MPL 1.1
   -
   - The contents of this file are subject to the Mozilla Public License Version
   - 1.1 (the "License"); you may not use this file except in compliance with
   - the License. You may obtain a copy of the License at
   - http://www.mozilla.org/MPL/
   -
   - Software distributed under the License is distributed on an "AS IS" basis,
   - WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
   - for the specific language governing rights and limitations under the
   - License.
   -
   - The Original Code is Clippings.
   -
   - The Initial Developer of the Original Code is
   - Alex Eng <ateng@users.sourceforge.net>.
   - Portions created by the Initial Developer are Copyright (C) 2005-2015
   - the Initial Developer. All Rights Reserved.
   -
   - Contributor(s):
   -
   - ***** END LICENSE BLOCK ***** -->

<window id="ae-clippings-manager"
 xmlns="http://www.mozilla.org/keymaster/gatekeeper/there.is.only.xul"
 xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#"
 xmlns:clp="http://clippings.mozdev.org/ns/rdf#"
 sizemode="normal" screenX="48" screenY="96" 
 persist="width height screenX screenY sizemode"
 title="&clippingsManager.title;"
 onload="init();initReloadMenuItem()"
 onunload="window_unload(event)"
 onfocus="window_focus(event)"
 onblur="window_blur(event)"
 onkeyup="window_keyup(event)" onkeydown="window_keydown(event)"
 onkeypress="window_keypress(event)">

  <script type="application/javascript" src="chrome://clippings/content/RDFTreeWrapper.js"/>
  <script type="application/javascript" src="chrome://clippings/content/clippingsMgr.js"/>
  <script type="application/javascript">
  <![CDATA[

    Components.utils.import("resource://clippings/modules/aeUtils.js");
    Components.utils.import("resource://clippings/modules/aeString.js");

    function window_unload(aEvent)
    {
      unload();
    }


    function window_focus(aEvent) 
    {
      //aeUtils.log("Clippings Manager window focused!");
      reload();
      applyUpdatedClippingsMgrPrefs();
    }


    function window_blur(aEvent) 
    {
      // The onblur event handler for the XUL document element is called
      // twice, and only if the <tree> element was focused.  Reason unknown.
      if (aEvent.target instanceof XULDocument) {
        if (gQuickEdit.isStarted()) {
	  gQuickEdit.stop();
	}
      }
    }


    function window_keyup(aEvent)
    {
      if (aEvent.target.tagName == "tree") {
	if (aEvent.key == "ArrowUp" || aEvent.key == "ArrowDown") {
	  //aeUtils.log(aeString.format('clippingsMgr.xul:<window id="clippings-window"> START keyup\nTAB key originating from <listbox id=%S>', aEvent.target.id));
	  updateDisplay();

  	  //aeUtils.log(aeString.format('clippingsMgr.xul:<window id="clippings-window"> END keyup\nTAB key originating <listbox id=%S>', aEvent.target.id));
	}        
      }
    }

    function window_keydown(aEvent) 
    {
      //aeUtils.log(aeString.format('clippingsMgr.xul:<window id="clippings-window"> Keydown event fired; aEvent.target.tagName == %S', aEvent.target.tagName));
    }

    function window_keypress(aEvent)
    {
      //aeUtils.log(aeString.format('clippingsMgr.xul:<window id="clippings-window"> Keypress event fired; aEvent.target.tagName == %S', aEvent.target.tagName));

      var btn, popup;

      // Display Options menu upon ALT+O keypress since the accesskey attribute
      // seems to be ignored on the menubutton element.
      if (aEvent.altKey && aEvent.key.toUpperCase() == "O") {
        btn = document.getElementById("clippings-options");
	popup = document.getElementById("clippings-options-popup");
	popup.showPopup(btn, -1, -1, "popup", "bottomleft", "topleft");
      }
      // Move menu (ALT+M)
      else if (aEvent.altKey && aEvent.key.toUpperCase() == "M") {
        btn = document.getElementById("toolbar-move");
	popup = document.getElementById("toolbar-move-popup");
	popup.showPopup(btn, -1, -1, "popup", "bottomleft", "topleft");
      }
    }


    function clippingsList_focus(aEvent)
    {
      //aeUtils.log("clippingsMgr.xul:<listbox id='clippings-list'> focused!");
    }

    function clippingsList_click(aEvent)
    {
      //aeUtils.log("clippingsMgr.xul:<listbox id='clippings-list'> START click\nInvoking updateDisplay()");
      updateDisplay(true);
      //aeUtils.log("clippingsMgr.xul:<listbox id='clippings-list'> END click");
    }

    function clippingsList_select(aEvent)
    {
      //aeUtils.log("clippingsMgr.xul:<listbox id='clippings-list'> START select\nInvoking updateCurrentEntryStatus()");

      updateCurrentEntryStatus();

      //aeUtils.log("clippingsMgr.xul:<listbox id='clippings-list'> END select");
    }

    function clippingsList_dragstart(aEvent)
    {
      if (aEvent.target.tagName != "treechildren") {
        return;
      }
      initClippingsListDrag(aEvent);
    }

    function clippingsList_drop(aEvent)
    {
      dropIntoClippingsList(aEvent);
    }

    function clippingName_focus(aEvent)
    { 
      //aeUtils.log("clippingsMgr.xul:<textbox id='clipping-name'> focused!");
      var textbox = aEvent.target;
      gQuickEdit.init(textbox, updateName);
      updateItemCount();
    }

    function clippingText_focus(aEvent)
    {
      //aeUtils.log("clippingsMgr.xul:<textbox id='clipping-text'> focused!");

      var textbox = aEvent.target;
      gQuickEdit.init(textbox, updateText);
      updateItemCount();
      gPlaceholderBar.setDisabledState(false);
    }

    function clippingName_blur(aEvent)
    {
      //aeUtils.log("clippingsMgr.xul:<textbox id='clipping-name'> START blur\nInvoking updateName()");

      gQuickEdit.stop();

      // Don't allow unnamed clippings/folders - that just looks silly.
      if (aEvent.target.value == "") {
        let defaultName = "";
        let uri = gClippingsList.getURIAtIndex(gCurrentListItemIndex);

        if (gClippingsSvc.isClipping(uri)) {
          defaultName = gStrBundle.getString("untitledClipping");
        }
        else if (gClippingsSvc.isFolder(uri)) {
          defaultName = gStrBundle.getString("untitledFolder");
        }
        aEvent.target.value = defaultName;
      }

      updateName(aEvent.target.value);
      commit();
      //aeUtils.log("clippingsMgr.xul:<textbox id='clipping-name'> END blur");
    }

    function clippingText_blur(aEvent)
    {
      //aeUtils.log("clippingsMgr.xul:<textbox id='clipping-text'> START blur\nInvoking updateText()");

      gQuickEdit.stop();

      updateText(aEvent.target.value);
      commit();

      gPlaceholderBar.setDisabledState(true);

      //aeUtils.log("clippingsMgr.xul:<textbox id='clipping-text'> END blur");
    }
   
  ]]>
  </script>

  <stringbundle id="ae-clippings-strings" 
   src="chrome://clippings/locale/clippings.properties"/>

  <commandset>
    <command id="cmd_close" oncommand="window.close()" />
    <command id="cmd_undo" oncommand="undo()" />
    <command id="cmd_undo_undo" oncommand="reverseLastUndo()" />
    <command id="cmd_delete" oncommand="deleteClipping()"/>
    <command id="cmd_key_delete" oncommand="deleteClipping(true)"/>
    <command id="cmd_import" oncommand="doImport()"/>
    <command id="cmd_export" oncommand="doExport()"/>
    <command id="cmd_new_from_clipboard" oncommand="pasteClippingAsNew()"/>
    <command id="cmd_reload" oncommand="reload()"/>
    <command id="cmd_goToSourceURL" oncommand="goToSourceURL()"/>
    <command id="cmd_find" oncommand="toggleFindBar()"/>
    <command id="cmd_datasrc_opts" oncommand="dataSrcOptions()"/>
    <command id="cmd_clipmgr_opts" oncommand="clippingsMgrOptions()"/>
    <command id="cmd_togglePlaceholderBar" oncommand="togglePlaceholderBar()"/>
    <command id="cmd_toggleDetails" oncommand="toggleClippingDetails()"/>
  </commandset>

  <keyset>
    <key id="key_close" key="w" modifiers="accel" 
     command="cmd_close"/>
    <key id="key_help" keycode="VK_F1" oncommand="showHelp()" />
    <key id="key_undoundo" keycode="VK_F2" command="cmd_undo_undo" />
    <key id="key_forcesave" key="s" modifiers="accel"
     oncommand="saveClippings(false, true, true)"/>
    <key id="key_force_reload" key="r" modifiers="accel"
     command="cmd_reload"/>
    <key id="key_delete" keycode="VK_DELETE" command="cmd_key_delete"/>
    <key id="key_force_reload_fn" keycode="VK_F5" command="cmd_reload"/>
    <key id="key_toggle_findbar" key="f" modifiers="accel"
     command="cmd_find"/>
    <key id="key_hide_findbar" keycode="VK_ESCAPE" oncommand="userCancel()"/>
  </keyset>

  <popupset>
    <menupopup id="clippings-list-context" 
     onpopupshowing="return initClippingsListPopup()">
      <!-- 
      Hide the Insert Clipping command, which might confuse user into thinking 
      that clipping can be pasted into any external application.
      -->
      <menuitem id="insert-clipping" default="true" hidden="true"
       label="&insertClipping.label;" accesskey="&insertClipping.accesskey;"
       oncommand="insertClipping()"/>
      <menuseparator hidden="true"/>
      <menu id="move-to-1"
            label="&moveTo.label;" accesskey="&moveTo.accesskey;"
            datasources="rdf:null"
	    ref="http://clippings.mozdev.org/rdf/user-clippings-v2">
        <menupopup id="move-to-1-popup"
	 onpopupshowing="initFolderMenuSeparator(this)">
	  <menuitem id="move-to-1-root"
	   class="menuitem-iconic clippings-root"
	   label="&clippingsRoot.label;"
	   oncommand="moveToFolder(gClippingsSvc.kRootFolderURI)"/>
	</menupopup>

        <template id="move-to-template">
          <rule iscontainer="true" clp:hassubfolders="true">
            <menupopup
	     onpopupshowing="initFolderMenuSeparator(this)">
              <menu uri="rdf:*" class="menu-iconic clippings-folder"
	       label="rdf:http://clippings.mozdev.org/ns/rdf#name">
	        <menupopup>
	          <menuitem label="&moveHere.label;"
	           oncommand="moveToFolder(this.parentNode.parentNode.id)"/>
                  <menuseparator/>
		</menupopup>
	      </menu>
            </menupopup>
          </rule>
	  <rule iscontainer="true" clp:hassubfolders="false">
	    <menupopup>
	      <menuitem class="menuitem-iconic clippings-folder" uri="rdf:*"
	       label="rdf:http://clippings.mozdev.org/ns/rdf#name"
	       oncommand="moveToFolder(this.id)"/>
	    </menupopup>
	  </rule>
        </template>
      </menu>

      <menu id="copy-to-1"
            label="&copyTo.label;" accesskey="&copyTo.accesskey;"
            datasources="rdf:null"
            ref="http://clippings.mozdev.org/rdf/user-clippings-v2">
        <menupopup id="copy-to-1-popup"
	 onpopupshowing="initFolderMenuSeparator(this)">
	  <menuitem id="copy-to-1-root"
	   class="menuitem-iconic clippings-root"
	   label="&clippingsRoot.label;"
	   oncommand="copyToFolder(gClippingsSvc.kRootFolderURI)"/>
	</menupopup>

        <template id="copy-to-template">
          <rule iscontainer="true" clp:hassubfolders="true">
            <menupopup>
              <menu class="menu-iconic clippings-folder" uri="rdf:*" 
	       label="rdf:http://clippings.mozdev.org/ns/rdf#name">
	        <menupopup>
	          <menuitem label="&copyHere.label;"
	           oncommand="copyToFolder(this.parentNode.parentNode.id)"/>
                  <menuseparator/>
		</menupopup>
	      </menu>
            </menupopup>
          </rule>
	  <rule iscontainer="true" clp:hassubfolders="false">
	    <menupopup>
	      <menuitem class="menuitem-iconic clippings-folder" uri="rdf:*"
	       label="rdf:http://clippings.mozdev.org/ns/rdf#name"
	       oncommand="copyToFolder(this.id)"/>
	    </menupopup>
	  </rule>
        </template>

      </menu>

      <menuitem id="go-to-url-cxt" label="&goToURL.label;"
       accesskey="&goToURL.accesskey;" command="cmd_goToSourceURL"/>

      <!-- Clipping label picker: for treelist context menu -->
      <menuseparator id="clipping-label-cxt-separator"/>
      <menu id="clipping-label-cxt" label="&clippingLabel.label;"
       accesskey="&clippingLabel.accesskey;">
        <menupopup id="clipping-label-cxt-menupopup"
         onpopupshowing="updateLabelMenu()">
          <menugroup id="clipping-label-cxt-menugroup-row-1">
            <menuitem class="menuitem-iconic clipping-label-none"
             tooltiptext="&labelNone.tooltip;"
             oncommand="updateLabel(this.classList[1])"/>
            <menuitem class="menuitem-iconic clipping-label-red"
             tooltiptext="&labelRed.tooltip;"
             oncommand="updateLabel(this.classList[1])"/>
            <menuitem class="menuitem-iconic clipping-label-orange"
             tooltiptext="&labelOrange.tooltip;"
             oncommand="updateLabel(this.classList[1])"/>
            <menuitem class="menuitem-iconic clipping-label-yellow"
             tooltiptext="&labelYellow.tooltip;"
             oncommand="updateLabel(this.classList[1])"/>
          </menugroup>
          <menugroup id="clipping-label-cxt-menugroup-row-2">
            <menuitem class="menuitem-iconic clipping-label-green"
             tooltiptext="&labelGreen.tooltip;"
             oncommand="updateLabel(this.classList[1])"/>
            <menuitem class="menuitem-iconic clipping-label-blue"
             tooltiptext="&labelBlue.tooltip;"
             oncommand="updateLabel(this.classList[1])"/>
            <menuitem class="menuitem-iconic clipping-label-purple"
             tooltiptext="&labelPurple.tooltip;"
             oncommand="updateLabel(this.classList[1])"/>
            <menuitem class="menuitem-iconic clipping-label-grey"
             tooltiptext="&labelGray.tooltip;"
             oncommand="updateLabel(this.classList[1])"/>
          </menugroup>
        </menupopup>
      </menu>

      <menuseparator/>
      <menuitem label="&deleteClipping.label;" accesskey="&deleteClipping.accesskey;" command="cmd_delete"/>
    </menupopup>

    <!-- Find Bar filter menu -->
    <menupopup id="find-filter-menupopup" position="after_start">
      <menuitem id="find-filter-clippings"
       type="radio" name="find-filter" checked="true"
       label="&findClippings.label;"
       oncommand="gFindBar.setFilter(gFindBar.FILTER_CLIPPINGS)"/>
      <menuitem id="find-filter-clippings-and-fldrs"
       type="radio" name="find-filter"
       label="&findClippingsAndFldrs.label;"
       oncommand="gFindBar.setFilter(gFindBar.FILTER_CLIPPINGS_AND_FLDRS)"/>
    </menupopup>

    <!-- Dialog panel for alert when attempting to create new clipping from
         clipboard, and clipboard doesn't contain any text. -->
    <panel id="ae-clippings-clipboard-alert">
      <hbox align="center">
	<image class="alert-icon" />
        <description>&errorNoClipboardContent.desc;</description>
      </hbox>
      <hbox>
	<spacer flex="1"/>
        <button label="&okButton.label;" oncommand="this.parentNode.parentNode.hidePopup()"/>
	<spacer flex="1"/>
      </hbox>
    </panel>

    <!-- Dialog panel for alert when importing an empty datasource file. -->
    <panel id="import-empty-alert">
      <hbox align="center">
	<image class="alert-icon" />
        <description id="import-empty-alert-msg"></description>
      </hbox>
      <hbox>
	<spacer flex="1"/>
        <button label="&okButton.label;" oncommand="this.parentNode.parentNode.hidePopup()"/>
	<spacer flex="1"/>
      </hbox>
    </panel>
  </popupset>

  <toolbox>
    <toolbar id="clippings-toolbar">
      <toolbarbutton id="new-clipping" label="&newClipping.label;" accesskey="&newClipping.accesskey;" oncommand="newClipping()" />
      <toolbarbutton id="new-folder" label="&newFolder.label;" accesskey="&newFolder.accesskey;" oncommand="newFolder()" />

      <toolbarbutton id="toolbar-move" type="menu"
       label="&move.label;" accesskey="&move.accesskey;">
        <menupopup id="toolbar-move-popup"
	 onpopupshowing="initMoveMenuPopup()">
	  <menu id="move-to-2" 
	   label="&moveTo.label;" accesskey="&moveTo.accesskey;"
	   datasources="rdf:null"
	   ref="http://clippings.mozdev.org/rdf/user-clippings-v2"
	   template="move-to-template">
	    <menupopup id="move-to-2-popup"
	     onpopupshowing="initFolderMenuSeparator(this)">
	      <menuitem id="move-to-2-root"
	       class="menuitem-iconic clippings-root"
	       label="&clippingsRoot.label;"
	       oncommand="moveToFolder(gClippingsSvc.kRootFolderURI)"/>
            </menupopup>
          </menu>

	  <menu id="copy-to-2" 
	   label="&copyTo.label;" accesskey="&copyTo.accesskey;"
	   datasources="rdf:null"
	   ref="http://clippings.mozdev.org/rdf/user-clippings-v2"
	   template="copy-to-template">
	    <menupopup id="copy-to-2-popup"
	     onpopupshowing="initFolderMenuSeparator(this)">
	      <menuitem id="copy-to-2-root"
	       class="menuitem-iconic clippings-root"
	       label="&clippingsRoot.label;"
	       oncommand="copyToFolder(gClippingsSvc.kRootFolderURI)"/>
            </menupopup>
          </menu>
	</menupopup>
      </toolbarbutton>

      <toolbarbutton id="delete-clipping" label="&deleteClipping.label;" accesskey="&deleteClipping.accesskey;" command="cmd_delete" /> 
      <toolbarbutton id="undo" label="&undo.label;" accesskey="&undo.accesskey;" command="cmd_undo" />
      <toolbarbutton id="find" label="&find.label;" accesskey="&find.accesskey;" command="cmd_find" />
      <spacer class="toolbar-separator" />
      <toolbarbutton id="clippings-options" label="&tools.label;" accesskey="&tools.accesskey;" type="menu">
        <menupopup id="clippings-options-popup" 
         onpopupshowing="updateToolsMenu()">
	  <menuitem id="new-from-clipboard" label="&newFromClipboard.menuLabel;" accesskey="&newFromClipboard.accesskey;" command="cmd_new_from_clipboard"/>
	  <menuseparator/>
	  <menuitem id="reload_menuitem" label="&reload.label;" accesskey="&reload.accesskey;" key="key_force_reload" command="cmd_reload" />
	  <menuseparator id="reload_menuseparator"/>
	  <menuitem id="datasrc-options" label="&dataFileOptions.label;" accesskey="&dataFileOptions.accesskey;" command="cmd_datasrc_opts"/>
          <menuitem id="backup" label="&backup.label;" accesskey="&backup.accesskey;"
           oncommand="backupClippings()"/>
	  <menu id="restore" label="&restore.label;" accesskey="&restore.accesskey;">
            <menupopup id="restore-popup" onpopupshowing="initRestorePopup(event)">
              <menuitem id="choose-backup-file"
	       label="&chooseFile.label;" accesskey="&chooseFile.accesskey;"
               oncommand="restoreUserSelectedBackupFile()"/>
            </menupopup>
          </menu>
	  <menuseparator/>
          <menuitem id="import" label="&import.label;" accesskey="&import.accesskey;" command="cmd_import"/>
          <menuitem id="export" label="&export.label;" accesskey="&export.accesskey;" command="cmd_export"/>
	  <menuseparator/>
	  <menu id="show-hide" label="&showHide.label;"
           accesskey="&showHide.accesskey;">
	    <menupopup>
              <menuitem id="toggle-placeholder-bar" type="checkbox"
               label="&placeholderBar.label;" 
               accesskey="&placeholderBar.accesskey;"
               command="cmd_togglePlaceholderBar"/>
              <menuitem id="toggle-options-pane" type="checkbox"
               label="&detailsPane.label;" accesskey="&detailsPane.accesskey;"
               command="cmd_toggleDetails"/>
            </menupopup>
          </menu>
	  <menuitem id="clipmgr-options" label="&options.label;" accesskey="&options.accesskey;" command="cmd_clipmgr_opts"/>
        </menupopup>
      </toolbarbutton>
    </toolbar>
  </toolbox>

  <hbox id="content" flex="1">
    <vbox id="tree-box" width="200" minwidth="100" maxwidth="400" 
     persist="width">
      <tree id="clippings-list" flex="1" hidecolumnpicker="true"
       datasources="rdf:null" flags="dont-build-content" seltype="single"
       ref="http://clippings.mozdev.org/rdf/user-clippings-v2"
       draggable="true"
       context="clippings-list-context" 
       onclick="clippingsList_click(event)"
       ondblclick="insertClipping()"
       onfocus="clippingsList_focus(event)"
       onselect="clippingsList_select(event)"
       ondragstart="clippingsList_dragstart(event)"
       ondrop="clippingsList_drop(event)">

        <treecols>
	  <treecol id="all-clippings" flex="1" primary="true"
	   hideheader="true" sortActive="true" sortDirection="natural"
	   sort="rdf:http://clippings.mozdev.org/ns/rdf#name"/>
	</treecols>

	<template>
	  <rule>
  	    <treechildren flex="1">
	      <treeitem uri="rdf:*">
	        <treerow> 
  	          <treecell label="rdf:http://clippings.mozdev.org/ns/rdf#name" properties="rdf:http://clippings.mozdev.org/ns/rdf#dummy_flag rdf:http://clippings.mozdev.org/ns/rdf#label"/>
		</treerow>
	      </treeitem>
	    </treechildren>
	  </rule>
	</template>
      </tree>

    </vbox>
    <splitter id="splitter"/>
    <deck id="entry-properties" selectedIndex="1" flex="1">
      <vbox flex="1">
        <textbox id="clipping-name" maxlength="64"
	 oninput="if(!gQuickEdit.isStarted()){gQuickEdit.start();updateEditStatus()}"
	 onblur="clippingName_blur(event)" 
	 onfocus="clippingName_focus(event)" />
        <separator class="thin"/>
        <textbox id="clipping-text" multiline="true" flex="1"
         placeholder="&clippingText.placeholder;"
	 oninput="if(!gQuickEdit.isStarted()){gQuickEdit.start();updateEditStatus()}"
	 onblur="clippingText_blur(event)"
	 onfocus="clippingText_focus(event)" />

        <!-- Insert Placeholder bar -->
        <toolbox id="clipping-content-editor-toolbox" hidden="true">
          <toolbar id="insert-placeholder-bar">
	    <vbox>
	      <spacer flex="1"/>
              <label value="&placeholderToolbar.label;"/>
	      <spacer flex="1"/>
            </vbox>
  	    <toolbarbutton id="placeholder-presets" type="menu" disabled="true"
             label="&placeholderPresets.label;">
              <menupopup>
                <menuitem label="&placeholderDate.label;" 
                 oncommand="insertPresetPlaceholder('DATE')"/>
		<menuitem label="&placeholderTime.label;"
                 oncommand="insertPresetPlaceholder('TIME')"/>
		<menuitem label="&placeholderAppName.label;"
                 oncommand="insertPresetPlaceholder('HOSTAPP')"/>
		<menuitem label="&placeholderUserAgent.label;"
                 oncommand="insertPresetPlaceholder('UA')"/>
		<menuitem label="&placeholderClippingName.label;"
                 oncommand="insertPresetPlaceholder('NAME')"/>
		<menuitem label="&placeholderFolderName.label;"
                 oncommand="insertPresetPlaceholder('FOLDER')"/>
              </menupopup>
            </toolbarbutton>
            <toolbarbutton id="placeholder-custom" disabled="true"
             label="&placeholderCustom.label;"
             oncommand="insertCustomPlaceholder()"/>
	    <toolbarbutton id="placeholder-autoincrement" disabled="true"
             label="&placeholderAutoincrement.label;"
             oncommand="insertAutoIncrementPlaceholder()"/>
          </toolbar>
        </toolbox>

        <!-- Source URL  -->
	<grid id="source-url-bar">
	  <columns>
	    <column/>
	    <column flex="1"/>
	    <column/>
	    <column/>
	  </columns>
	  <rows>
	    <row align="center">
	      <label value="&sourceURL.label;" control="clipping-src-url"/>
              <deck id="source-url-deck" flex="1">
                <grid flex="1">
                  <columns>
                    <column flex="1"/>
                    <column/>
                  </columns>
                  <rows>
                    <row align="center">
                      <label id="clipping-src-url-link" class="text-link"
                       crop="end" onclick="goToSourceURL()" 
                       ondblclick="gSrcURLBar.edit()"/>
                      <button id="edit-url-btn" label="Edit" 
                       oncommand="gSrcURLBar.edit()"/>
                    </row>
                  </rows>
                </grid>
		<hbox flex="1">
  	          <textbox id="clipping-src-url" flex="1"
                   placeholder="&none.label;"
                   onkeypress="gSrcURLBar.keypress(event)"/>
                  <hbox id="clipping-src-url-edit-btns">
                    <button id="src-url-edit-ok" label="ok"
                     oncommand="gSrcURLBar.acceptEdit()"
                     style="margin-left:2px;margin-right:1px"/>
		    <button id="src-url-edit-cancel" label="cancel"
                     oncommand="gSrcURLBar.cancelEdit()"
                     style="margin-left:1px"/>
                  </hbox>
                </hbox>
              </deck>
	    </row>
	  </rows>
        </grid>

	<!-- Shortcut key and label -->
	<grid id="options-bar">
          <columns>
	    <column/>
            <column/>
            <column/>
            <column flex="1"/>
            <column/>
	    <column/>
          </columns>

          <rows>
            <row align="center">
              <label id="clipping-key-label" value="&shortcutkey.label;"
	       accesskey="&shortcutkey.accesskey;" control="clipping-key"/>
	      <menulist id="clipping-key" 
               onmousedown="if(this.disabled){return;}gShortcutKey.setOldKey()"
	       oncommand="if(this.disabled){return;}updateEditStatus();gShortcutKey.update(UNDO_STACK)">
                <menupopup id="clipping-key-popup">
                  <menuitem label="&none.label;"/>
                  <menuitem label="A"/>
                  <menuitem label="B"/>
                  <menuitem label="C"/>
                  <menuitem label="D"/>
                  <menuitem label="E"/>
                  <menuitem label="F"/>
                  <menuitem label="G"/>
                  <menuitem label="H"/>
                  <menuitem label="I"/>
                  <menuitem label="J"/>
                  <menuitem label="K"/>
                  <menuitem label="L"/>
                  <menuitem label="M"/>
                  <menuitem label="N"/>
                  <menuitem label="O"/>
                  <menuitem label="P"/>
                  <menuitem label="Q"/>
                  <menuitem label="R"/>
                  <menuitem label="S"/>
                  <menuitem label="T"/>
                  <menuitem label="U"/>
                  <menuitem label="V"/>
                  <menuitem label="W"/>
                  <menuitem label="X"/>
                  <menuitem label="Y"/>
                  <menuitem label="Z"/>
                  <menuitem label="1"/>
                  <menuitem label="2"/>
                  <menuitem label="3"/>
                  <menuitem label="4"/>      
                  <menuitem label="5"/>
                  <menuitem label="6"/>      
                  <menuitem label="7"/>      
                  <menuitem label="8"/>
                  <menuitem label="9"/>
                  <menuitem label="0"/>
                </menupopup>
              </menulist>
              <label id="shortcut-key-minihelp" class="text-link" 
               value="&shortcutKeyList.label;" 
               onclick="showShortcutKeyMinihelp()"/>
              <spacer flex="1"/>

              <!-- Clipping label picker -->
              <label id="clipping-label" value="&clippingLabelPicker.label;"
               accesskey="&clippingLabelPicker.accesskey;"
               control="clipping-label-btn"/>
              <button id="clipping-label-btn" type="menu"
               image="chrome://clippings/skin/images/label-none.svg">
                <menupopup id="clipping-label-menupopup"
                 onpopupshowing="updateLabelMenu()">
                  <menugroup id="clipping-label-menugroup-row-1">
                    <menuitem class="menuitem-iconic clipping-label-none"
                     tooltiptext="&labelNone.tooltip;"
                     oncommand="updateLabel(this.classList[1])"/>
                    <menuitem class="menuitem-iconic clipping-label-red"
                     tooltiptext="&labelRed.tooltip;"
                     oncommand="updateLabel(this.classList[1])"/>
                    <menuitem class="menuitem-iconic clipping-label-orange"
                     tooltiptext="&labelOrange.tooltip;"
                     oncommand="updateLabel(this.classList[1])"/>
                    <menuitem class="menuitem-iconic clipping-label-yellow"
                     tooltiptext="&labelYellow.tooltip;"
                     oncommand="updateLabel(this.classList[1])"/>
                  </menugroup>
                  <menugroup id="clipping-label-menugroup-row-2">
                    <menuitem class="menuitem-iconic clipping-label-green"
                     tooltiptext="&labelGreen.tooltip;"
                     oncommand="updateLabel(this.classList[1])"/>
                    <menuitem class="menuitem-iconic clipping-label-blue"
                     tooltiptext="&labelBlue.tooltip;"
                     oncommand="updateLabel(this.classList[1])"/>
                    <menuitem class="menuitem-iconic clipping-label-purple"
                     tooltiptext="&labelPurple.tooltip;"
                     oncommand="updateLabel(this.classList[1])"/>
                    <menuitem class="menuitem-iconic clipping-label-grey"
                     tooltiptext="&labelGray.tooltip;"
                     oncommand="updateLabel(this.classList[1])"/>
                  </menugroup>
                </menupopup>
              </button>
            </row>
          </rows>
        </grid>
      </vbox>
            
      <vbox flex="1" align="center">
        <separator/>
        <description id="no-clippings-message">&noClippings.label;</description>
      </vbox>
    </deck>
  </hbox>

  <!-- Find bar -->
  <hbox id="find-bar" collapsed="true">
    <grid>
      <columns>
	<column/>
      </columns>
      <rows>
        <row align="center">
          <label value="&findBar.label;" control="find-clipping"/>

	  <toolbarbutton id="find-filter-menu" class="find-filter-clippings"
           type="menu" orient="horizontal" popup="find-filter-menupopup"/>

          <!-- Alternate Find Bar filter button for use on Mac OS X -->
          <button id="find-filter-menu-btn" class="find-filter-clippings"
           type="menu" popup="find-filter-menupopup" hidden="true"/>

          <textbox id="find-clipping" type="search"
           oncommand="gFindBar.updateSearch(this.value)"/>
          <toolbarbutton id="find-next" orient="horizontal"
           label="&findNext.label;" accesskey="&findNext.accesskey;"
           oncommand="gFindBar.findNext()"/>
          <toolbarbutton id="find-prev" orient="horizontal"
           label="&findPrev.label;" accesskey="&findPrev.accesskey;"
           oncommand="gFindBar.findPrev()"/>
	  <checkbox id="match-case" 
           label="&matchCase.label;" accesskey="&matchCase.accesskey;"
           checked="false" oncommand="gFindBar.toggleMatchCase()"/>
          <label id="find-status" value=""/>
        </row>
      </rows>
    </grid>
  </hbox>

  <statusbar id="status-bar">
    <statusbarpanel id="app-status" label="" flex="1" />
  </statusbar>

</window>
